 var vue = new Vue({
    el: "#terraceApply",
    data: {
        company: "",
        areaCode: "",
        companyFlag: false,
        addrFlag:false,
        areaCodeFlag: false,
        companyFlagWord: "请填入公司名称",
        addrFlagWord:"请选择地址",
        areaCodeFlagWord: "请填入小区",
    	getEstateFlag: true,
        inputEstateFlag: false,
        companySpan: "合力正通测试小区",
        province:"",
        city:"",
        area:"",
        provinceList:"",
        cityList:"",
        areaList:"",
        addrAllFlag:[false,false,false],
        submitFlag:[false,false,false],
        hostUrl: "http://192.168.51.24:8090/lxjsdkApi/getApplicationList?str=",
        initProvinceUrl:"http://192.168.51.24:8090/lxjsdkApi/initProvince?str=",
        initCityUrl:"http://192.168.51.24:8090/lxjsdkApi/getCitySelectData?str=",
        initAreaUrl:"http://192.168.51.24:8090/lxjsdkApi/getAreaSelectData?str=",
        time_stamp:new Date().getTime(),
    },
    methods:{
    	getEstate:function(){
            this.companySpan = sessionStorage.getItem("company");
            var estateFlag = parseInt(sessionStorage.getItem("estateFlag"));
            if(estateFlag == 1){
                this.getEstateFlag = true;
                this.inputEstateFlag = false;

            }else{
                this.getEstateFlag = false;
                this.inputEstateFlag = true;
            }
        },
        addTerrace:function(){
            this.companyFunc();
            this.areaCodeFunc();

            if(!this.flagFunc(this.addrAllFlag)){
                this.addrFlag = true;
            }else{
                this.addrFlag = false;
            }
            if(this.flagFunc(this.submitFlag) && this.flagFunc(this.addrAllFlag)){
                this.terraceAjax();
            }
        },
        terraceAjax:function(){ //获取平台账号密码
            var params = {
                body:{},
                header:{
                    token:"00",
                    time_stamp:this.time_stamp
                }
            }
            var paramsStr = encodeURI(JSON.stringify(params));
            var httpURL = this.hostUrl+paramsStr
            this.$http.jsonp(httpURL,{
                emulateJSON: true,
                method: "get",
                dataType: "jsonp",
                jsonp: "jsoncallback",
            }).then(function(res){  
                console.log(res);
                this.terraceItem = res.body.list;
                if(res.body.list.length == 0){
                    this.terraceItemFlag = true;
                    this.terraceFlag = true;
                }else{
                    this.terraceItemFlag = false;
                    this.terraceFlag = true;
                }
            },function(res){  
                 
            });
        },
        initProvince:function(){
            var params = {
                body:{},
                header:{
                    token:"00",
                    time_stamp:this.time_stamp
                }
            };
            var paramsStr = encodeURI(JSON.stringify(params));
            var httpURL = this.initProvinceUrl+paramsStr;
            this.$http.jsonp(httpURL,{
                emulateJSON: true,
                method: "get",
                dataType: "jsonp",
                jsonp: "jsoncallback",
            }).then(function(res){  
                console.log(res);
                if(res.body.result == 0){
                   this.provinceList= res.body.provinces; 
                }
            
            },function(res){  
                 
            });
        },
        initCity:function(val){
            var params = {
                body:{
                    code:val
                },
                header:{
                    token:"00",
                    time_stamp:this.time_stamp
                }
            };
            var paramsStr = encodeURI(JSON.stringify(params));
            var httpURL = this.initCityUrl+paramsStr;
            this.$http.jsonp(httpURL,{
                emulateJSON: true,
                method: "get",
                dataType: "jsonp",
                jsonp: "jsoncallback",
            }).then(function(res){  
                if(res.body.result == 0){
                   this.cityList= res.body.citys; 
                }
            },function(res){  
                 
            });
        },
        initArea:function(val){
            var params = {
                body:{
                    code:val
                },
                header:{
                    token:"00",
                    time_stamp:this.time_stamp
                }
            };
            var paramsStr = encodeURI(JSON.stringify(params));
            var httpURL = this.initAreaUrl+paramsStr;
            this.$http.jsonp(httpURL,{
                emulateJSON: true,
                method: "get",
                dataType: "jsonp",
                jsonp: "jsoncallback",
            }).then(function(res){  
                if(res.body.result == 0){
                   this.areaList= res.body.areas; 
                }
            },function(res){  
                 
            });
        },
        companyFunc:function(){
            if(this.isCondition(this.company)){
                this.companyFlag = true;
                this.submitFlag[0] = false;
            }else{
                this.companyFlag = false;
                this.submitFlag[0] = true;
            }
        },
        areaCodeFunc:function(){
            if(this.isCondition(this.areaCode)){
                this.areaCodeFlag = true;
                this.submitFlag[1] = false;
            }else{
                this.areaCodeFlag = false;
                this.submitFlag[1] = true;
            }
        },
        flagFunc:function(arr){
            if(this.arrayFunc(arr) == undefined){
                return true;
            }else{
                return false; 
            }
        },
        arrayFunc:function(arr){
            for(var i = 0;i< arr.length;i++){
                if( this.addrAllFlag[i] == false){
                    return false;
                }
            }
        },
        isCondition:function(param) {
            if(param == null || param == "" || param == undefined) {
                return true;
            }
            return false;
        }
    },
    mounted:function(){
        this.getEstate();
        if(this.getEstateFlag){
            this.company = this.companySpan;
        }
        this.initProvince();
    },
    watch:{
        province:function(newVal,oldVal){
            console.log(newVal.name);
            console.log(newVal.code);
            if(this.isCondition(this.province)){
                this.addrAllFlag[0] = false;
            }else{
                 this.addrAllFlag[0] = true;
            }
            this.initCity(newVal.code);
            this.city = "";
            this.area = "";
        },
        city:function(newVal,oldVal){
            console.log(newVal.name);
            if(this.isCondition(this.city)){
                this.addrAllFlag[1] = false;
            }else{
                 this.addrAllFlag[1] = true;
            }
            this.initArea(newVal.code);
            this.area = "";
        },
        area:function(newVal,oldVal){
            if(this.isCondition(this.area)){
                this.addrAllFlag[2] = false;

            }else{
                this.addrAllFlag[2] = true;
                console.log(this.province.name+this.city.name+this.area.name);
            }
        }
    }
});
